services:
  tandoor:
    image: ghcr.io/tandoorrecipes/recipes:latest
    container_name: tandoor
    restart: always
    env_file:
      - ${CONFIG_ROOT:-.}/tandoor/.env
    volumes:
      - ${CONFIG_ROOT:-.}/tandoor/database:/opt/recipes/database
      - ${CONFIG_ROOT:-.}/tandoor/mediafiles:/opt/recipes/mediafiles
      - ${CONFIG_ROOT:-.}/tandoor/nginx:/opt/recipes/http.d
      - tandoor-staticfiles:/opt/recipes/staticfiles
    healthcheck:
      test: ["CMD", "wget", "http://127.0.0.1:80/recipes", "-qO", "/dev/null"]
      interval: 1m
      retries: 10
    labels:
      - traefik.enable=true
      - traefik.http.routers.tandoor.rule=(Host(`${HOSTNAME}`) && PathPrefix(`/recipes`))
      - traefik.http.routers.tandoor.tls=true
      - traefik.http.routers.tandoor.tls.certresolver=myresolver
      - traefik.http.services.tandoor.loadbalancer.server.port=80
      - homepage.group=Apps
      - homepage.name=Tandoor
      - homepage.icon=tandoor-recipes.png
      - homepage.href=/recipes
      - homepage.description=Smart recipe management
      - homepage.weight=1
    profiles:
      - tandoor

  tandoor-backup:
    image: ghcr.io/adrienpoupa/rclone-backup:latest
    container_name: tandoor-backup
    restart: always
    env_file:
      - ${CONFIG_ROOT:-.}/tandoor/backup.env
    environment:
      - BACKUP_FOLDER_NAME=mediafiles
      - BACKUP_FOLDER_PATH=/data/mediafiles
      - DB_TYPE=sqlite
      - SQLITE_DATABASE=/database/recipes.db
    volumes:
      - ${CONFIG_ROOT:-.}/tandoor/database:/database
      - ${CONFIG_ROOT:-.}/tandoor/mediafiles:/data/mediafiles
      - ${CONFIG_ROOT:-.}/tandoor/backup:/config
    profiles:
      - tandoor

volumes:
  tandoor-staticfiles:
