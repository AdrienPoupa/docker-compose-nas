version: "3.9"
services:
  sonarr:
    image: lscr.io/linuxserver/sonarr
    container_name: sonarr
    ports:
      - "8989:8989"
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    volumes:
      - ./sonarr:/config
      - ${DATA_ROOT}:/data
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://127.0.0.1:8989/sonarr/ping" ]
      interval: 5s
      retries: 10
    labels:
      - homepage.group=Media
      - homepage.name=Sonarr
      - homepage.icon=sonarr.png
      - homepage.href=http://localhost:8989
      - homepage.description=Series management
      - homepage.weight=0
      - homepage.widget.type=sonarr
      # When you run multiple services in a Docker Compose file, Docker creates a default network for these services to communicate with each other. 
      # Inside this network, containers can refer to each other by their service names as defined in the Docker Compose file. 
      # In this case, the sonarr service can be reached at http://sonarr:8989 from any other service within the same Docker network.
      - homepage.widget.url=http://sonarr:8989
      - homepage.widget.key=${SONARR_API_KEY}
  radarr:
    image: lscr.io/linuxserver/radarr
    container_name: radarr
    ports:
      - "7878:7878"
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    volumes:
      - ./radarr:/config
      - ${DATA_ROOT}:/data
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://127.0.0.1:7878/radarr/ping" ]
      interval: 5s
      retries: 10
    labels:
      - homepage.group=Media
      - homepage.name=Radarr
      - homepage.icon=radarr.png
      - homepage.href=http://localhost:7878
      - homepage.description=Movies management
      - homepage.weight=1
      - homepage.widget.type=radarr
      - homepage.widget.url=http://radarr:7878
      - homepage.widget.key=${RADARR_API_KEY}
  lidarr:
    image: lscr.io/linuxserver/lidarr
    container_name: lidarr
    ports:
      - "8686:8686"
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    volumes:
      - ./lidarr:/config
      - ${DATA_ROOT}:/data
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://127.0.0.1:8686/lidarr/ping" ]
      interval: 5s
      retries: 10
    labels:
      - homepage.group=Media
      - homepage.name=Lidarr
      - homepage.icon=lidarr.png
      - homepage.href=http://localhost:8686
      - homepage.description=Music management
      - homepage.weight=2
      - homepage.widget.type=lidarr
      - homepage.widget.url=http://lidarr:8686
      - homepage.widget.key=${LIDARR_API_KEY}
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    ports:
      - "9696:9696"
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    volumes:
      - ./prowlarr:/config
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://127.0.0.1:9696/prowlarr/ping" ]
      interval: 5s
      retries: 10
    labels:
      - homepage.group=Download
      - homepage.name=Prowlarr
      - homepage.icon=prowlarr.png
      - homepage.href=http://localhost:9696
      - homepage.description=Indexers management
      - homepage.weight=4
      - homepage.widget.type=prowlarr
      - homepage.widget.url=http://prowlarr:9696
      - homepage.widget.key=${PROWLARR_API_KEY}
  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    ports:
      - "8080:8080" # SABnzbd Web UI
    environment:
      - PUID=${USER_ID} # Replace with your user ID
      - PGID=${GROUP_ID} # Replace with your group ID
      - TZ=${TIMEZONE} # Replace with your timezone
    volumes:
      - ./sabnzbd/config:/config # Configuration files
      - ${DATA_ROOT}/downloads:/downloads # Downloads
      - ${DATA_ROOT}/incomplete-downloads:/incomplete-downloads # Incomplete downloads
    restart: always
    labels:
      - homepage.group=Download
      - homepage.name=SABnzbd
      - homepage.icon=sabnzbd.png
      - homepage.href=http://localhost:8080
      - homepage.description=Usenet
      - homepage.weight=6
  readarr:
    image: lscr.io/linuxserver/readarr:nightly
    container_name: readarr
    ports:
      - "8787:8787" # Readarr Web UI
    environment:
      - PUID=${USER_ID} # Replace with your user ID
      - PGID=${GROUP_ID} # Replace with your group ID
      - TZ=${TIMEZONE} # Replace with your timezone
    volumes:
      - ./readarr:/config # Configuration files
      - ${DATA_ROOT}/books:/books # Books directory
      - ${DATA_ROOT}/downloads:/downloads # Downloads
    restart: always
    labels:
      - homepage.group=Media
      - homepage.name=Readarr
      - homepage.icon=readarr.png
      - homepage.href=http://localhost:8787
      - homepage.description=Ebook and Audiobook management
      - homepage.weight=3
      - homepage.widget.type=readarr
      - homepage.widget.url=http://readarr:8787
      - homepage.widget.key=${READARR_API_KEY}
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    ports:
      - "32400:32400"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
      - VERSION=docker
      - PLEX_CLAIM=claim-xbtn7VzfF6H1T6EhxVHS #optional
    volumes:
      - ./plex:/config
      - ./plex/transcode:/transcode # Replace with the path to your transcode directory
      - ./plex/media:/data # Replace with the path to your media library
    restart: unless-stopped
    labels:
      - homepage.group=Media
      - homepage.name=Plex
      - homepage.icon=plex.png
      - homepage.widget.type=plex
      - homepage.widget.url=http://plex:32400
      - homepage.description=Media Server
      - homepage.href=http://localhost:32400
      - homepage.weight=6
  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    ports:
      - "3000:3000"
    environment:
      - HOMEPAGE_VAR_TITLE=${HOMEPAGE_VAR_TITLE}
      - HOMEPAGE_VAR_SEARCH_PROVIDER=${HOMEPAGE_VAR_SEARCH_PROVIDER}
      - HOMEPAGE_VAR_HEADER_STYLE=${HOMEPAGE_VAR_HEADER_STYLE}
      - HOMEPAGE_VAR_WEATHER_CITY=${HOMEPAGE_VAR_WEATHER_CITY}
      - HOMEPAGE_VAR_WEATHER_LAT=${HOMEPAGE_VAR_WEATHER_LAT}
      - HOMEPAGE_VAR_WEATHER_LONG=${HOMEPAGE_VAR_WEATHER_LONG}
      - HOMEPAGE_VAR_WEATHER_TIME=${TIMEZONE}
      - HOMEPAGE_VAR_WEATHER_UNIT=${HOMEPAGE_VAR_WEATHER_UNIT}
    volumes:
      - ./homepage:/app/config
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${DATA_ROOT}:/data
    restart: always
    command: [sh, -c, "cp -n /app/config/tpl/*.yaml /app/config && node server.js"]
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: always
    environment:
      - WATCHTOWER_CLEANUP=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  autoheal:
    image: willfarrell/autoheal:latest
    container_name: autoheal
    restart: always
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  default:
    name: docker-compose-nas
